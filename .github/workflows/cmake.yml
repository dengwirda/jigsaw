name: CMake Build Matrix

on:
  workflow_dispatch:
  pull_request:
  push:

env:
  BUILD_TYPE: Debug

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
        - {
            name: "Windows Latest MSVC", artifact: "Windows-MSVC.tar.xz",
            os: windows-latest,
            cc: "cl", cxx: "cl",
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
          }
        - {
            name: "Ubuntu Latest GCC", artifact: "Linux.tar.xz",
            os: ubuntu-latest,
            cc: "gcc", cxx: "g++"
          }
        - {
            name: "macOS Latest Clang", artifact: "macOS.tar.xz",
            os: macos-latest,
            cc: "clang", cxx: "clang++"
          }

    steps:
      - uses: actions/checkout@v3
    
      - name: Print environment
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}
          
      - name: Install dependencies on win
        if: startsWith(matrix.config.os, 'windows')
        run: |
          choco install ninja cmake
          ninja --version
          cmake --version
          
      - name: Install dependencies on unx
        if: startsWith(matrix.config.name, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install ninja-build cmake
          ninja --version
          cmake --version
          g++ --version
          
      - name: Install dependencies on osx
        if: startsWith(matrix.config.os, 'macos')
        run: |
          brew install ninja cmake llvm libomp
          ninja --version
          cmake --version
          clang++ --version
    
      - name: Configure jigsaw
        run: |
          cd ${{github.workspace}}/build
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build jigsaw
        run: |
          cd ${{github.workspace}}/build
          cmake --build . --config ${{env.BUILD_TYPE}} --target install
        
      - name: Clean jigsaw
        run: rm -r ${{github.workspace}}/build
      
      - name: Configure tests for jigsaw
        run: |
          cd ${{github.workspace}}/uni/build
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build tests for jigsaw
        run: |
          cd ${{github.workspace}}/uni/build
          cmake --build . --config ${{env.BUILD_TYPE}} --target install
        
      - name: Clean tests for jigsaw
        run: rm -r ${{github.workspace}}/uni/build
